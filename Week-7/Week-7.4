Problem Statement:
There is a malfunctioning keyboard where some letter keys do not work. All other keys on the keyboard work properly.

Given a string text of words separated by a single space (no leading or trailing spaces) and a string brokenLetters of all distinct letter keys that are broken, return the number of words in text you can fully type using this keyboard.

Example 1:

Input: text = "hello world", brokenLetters = "ad"

Output: 

1

Explanation: We cannot type "world" because the 'd' key is broken.
Code:
text = input().split(" ")
brokenLetters = input()
counter = 0
for x in range(len(text)):
    text[x]=text[x].lower()

for word in text:
    flag=True
    for letter in word:
        if(letter in brokenLetters):
            flag=False
            break
        else:
            continue
    if flag:
        counter+=1
    else:
        continue

print(counter)
